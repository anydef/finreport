//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "account")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub account_id: String,
    pub display_id: String,
    pub account_type: String,
    #[sea_orm(unique)]
    pub iban: String,
    pub bic: String,
    pub institute: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::account_balance::Entity")]
    AccountBalance,
    #[sea_orm(has_many = "super::account_transactions::Entity")]
    AccountTransactions,
}

impl Related<super::account_balance::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AccountBalance.def()
    }
}

impl Related<super::account_transactions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AccountTransactions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
